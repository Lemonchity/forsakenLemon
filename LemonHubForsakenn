local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Lemon hub | Forsaken",
   LoadingTitle = "idk,
   LoadingSubtitle = "by lemon",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "LemonHub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key | LemonHub",
      Subtitle = "Key System",
      Note = "discord.gg/TfGs7aZvXf",
      FileName = "Lemon Hub Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"LemonHubOnTop"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "You executed the script",
   Content = "LemonHub gui",
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = Tab:CreateButton({
   Name = "INF stamina",
   Callback = function()
local StaminaModule = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)

StaminaModule.StaminaLossDisabled = true
task.spawn(function()
	while true do
		task.wait(0.1)
		StaminaModule.Stamina = StaminaModule.MaxStamina
		StaminaModule.StaminaChanged:Fire()
	end
end)
})  

local Button = MainTab:CreateButton({
   Name = "Infinite Jump Toggle",
   Callback = function()
       --Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
 --Ensures this only runs once to save resources
 _G.infinJumpStarted = true
 
 --Notifies readiness
 game.StarterGui:SetCore("SendNotification", {Title="LemonHub"; Text="Infinite Jump Activated!"; Duration=5;})

 --The actual infinite jump
 local plr = game:GetService('Players').LocalPlayer
 local m = plr:GetMouse()
 m.KeyDown:connect(function(k)
  if _G.infinjump then
   if k:byte() == 32 then
   humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
   humanoid:ChangeState('Jumping')
   wait()
   humanoid:ChangeState('Seated')
   end
  end
 end)
end
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderjp", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local OtherTab = Window:CreateTab("ð§· Other", nil) -- Title, Image
local Section = OtherTab:CreateSection("Other")

Rayfield:Notify({
   Title = "You executed the script",
   Content = "LemonHub gui",
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})
